"""add face recognition tables

Revision ID: c37abab13503
Revises: a3801658f534
Create Date: 2025-10-02 15:48:30.361748

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import pgvector


# revision identifiers, used by Alembic.
revision: str = 'c37abab13503'
down_revision: Union[str, Sequence[str], None] = 'a3801658f534'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('unknownfacecluster',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('centroid_embedding', sa.JSON(), nullable=True),
    sa.Column('face_count', sa.Integer(), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('claimed_by_user_id', sa.Integer(), nullable=True),
    sa.Column('claimed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['claimed_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_unknown_cluster_event', 'unknownfacecluster', ['event_id'], unique=False)
    op.create_table('facematch',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('media_id', sa.Integer(), nullable=False),
    sa.Column('media_embedding_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_notified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.ForeignKeyConstraint(['media_embedding_id'], ['mediaembedding.id'], ),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_face_match_media', 'facematch', ['media_id'], unique=False)
    op.create_index('idx_face_match_user_event', 'facematch', ['user_id', 'event_id'], unique=False)
    op.create_index('idx_face_match_user_media', 'facematch', ['user_id', 'media_id'], unique=False)
    op.create_table('unknownface',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('media_id', sa.Integer(), nullable=False),
    sa.Column('media_embedding_id', sa.Integer(), nullable=False),
    sa.Column('cluster_id', sa.Integer(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cluster_id'], ['unknownfacecluster.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.ForeignKeyConstraint(['media_embedding_id'], ['mediaembedding.id'], ),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_unknown_face_cluster', 'unknownface', ['cluster_id'], unique=False)
    op.create_index('idx_unknown_face_media', 'unknownface', ['media_id'], unique=False)
    op.create_index('idx_media_usage_media_usage', 'mediausage', ['media_id', 'usage_type'], unique=False)
    op.create_index('idx_media_usage_owner_usage', 'mediausage', ['owner_type', 'owner_id', 'usage_type'], unique=False)
    op.add_column('user', sa.Column('notify_on_face_match', sa.Boolean(), nullable=True))
    op.add_column('user', sa.Column('face_match_threshold', sa.Float(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'face_match_threshold')
    op.drop_column('user', 'notify_on_face_match')
    op.drop_index('idx_media_usage_owner_usage', table_name='mediausage')
    op.drop_index('idx_media_usage_media_usage', table_name='mediausage')
    op.drop_index('idx_unknown_face_media', table_name='unknownface')
    op.drop_index('idx_unknown_face_cluster', table_name='unknownface')
    op.drop_table('unknownface')
    op.drop_index('idx_face_match_user_media', table_name='facematch')
    op.drop_index('idx_face_match_user_event', table_name='facematch')
    op.drop_index('idx_face_match_media', table_name='facematch')
    op.drop_table('facematch')
    op.drop_index('idx_unknown_cluster_event', table_name='unknownfacecluster')
    op.drop_table('unknownfacecluster')
    # ### end Alembic commands ###
