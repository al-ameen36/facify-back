"""update models

Revision ID: 7161d8c6ee9e
Revises: ea4d93be873d
Create Date: 2025-10-11 11:31:25.891327

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import pgvector
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7161d8c6ee9e'
down_revision: Union[str, Sequence[str], None] = 'ea4d93be873d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('facecluster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('centroid', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_facecluster_user_id', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_facecluster_label'), 'facecluster', ['label'], unique=False)
    op.create_table('faceembedding',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('media_id', sa.Integer(), nullable=False),
    sa.Column('embedding', sa.JSON(), nullable=True),
    sa.Column('facial_area', sa.JSON(), nullable=True),
    sa.Column('cluster_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['cluster_id'], ['facecluster.id'], name='fk_faceembedding_cluster_id', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], name='fk_faceembedding_media_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('facematch')
    op.drop_table('unknownfacecluster')
    op.drop_table('mediaembedding')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mediaembedding',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('media_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('model_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('embeddings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=False),
    sa.Column('processed_at', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('retry_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], name=op.f('fk_mediaembedding_media_id'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_mediaembedding_user_id'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('mediaembedding_pkey')),
    sa.UniqueConstraint('media_id', name=op.f('mediaembedding_media_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('unknownfacecluster',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cluster_label', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('embeddings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name=op.f('fk_unknownfacecluster_event_id'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('unknownfacecluster_pkey'))
    )
    op.create_table('facematch',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('media_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('embedding_index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('matched_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('distance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('is_participant', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name=op.f('fk_facematch_event_id'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['matched_user_id'], ['user.id'], name=op.f('fk_facematch_user_id'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], name=op.f('fk_facematch_media_id'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('facematch_pkey'))
    )
    op.drop_table('faceembedding')
    op.drop_index(op.f('ix_facecluster_label'), table_name='facecluster')
    op.drop_table('facecluster')
    # ### end Alembic commands ###
