"""properly cascade deletes

Revision ID: 9c35b100f562
Revises: 4ff081210921
Create Date: 2025-10-05 15:07:03.141081

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import pgvector


# revision identifiers, used by Alembic.
revision: str = '9c35b100f562'
down_revision: Union[str, Sequence[str], None] = '4ff081210921'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('event', 'privacy',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('event', 'secret',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('event', 'allow_contributions',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('event', 'auto_approve_uploads',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('event', 'created_by_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_event_name'), 'event', ['name'], unique=True)
    op.drop_constraint(op.f('event_created_by_id_fkey'), 'event', type_='foreignkey')
    op.create_foreign_key('fk_event_created_by_id', 'event', 'user', ['created_by_id'], ['id'], ondelete='CASCADE')
    op.alter_column('eventparticipant', 'status',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_index(op.f('ix_eventparticipant_status'), 'eventparticipant', ['status'], unique=False)
    op.alter_column('facematch', 'matched_user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('facematch_event_id_fkey'), 'facematch', type_='foreignkey')
    op.drop_constraint(op.f('facematch_media_id_fkey'), 'facematch', type_='foreignkey')
    op.drop_constraint(op.f('facematch_matched_user_id_fkey'), 'facematch', type_='foreignkey')
    op.create_foreign_key('fk_facematch_media_id', 'facematch', 'media', ['media_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_facematch_user_id', 'facematch', 'user', ['matched_user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_facematch_event_id', 'facematch', 'event', ['event_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint(op.f('mediaembedding_media_id_fkey'), 'mediaembedding', type_='foreignkey')
    op.drop_constraint(op.f('mediaembedding_user_id_fkey'), 'mediaembedding', type_='foreignkey')
    op.create_foreign_key('fk_mediaembedding_media_id', 'mediaembedding', 'media', ['media_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_mediaembedding_user_id', 'mediaembedding', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('mediausage_media_id_key'), 'mediausage', type_='unique')
    op.drop_constraint(op.f('mediausage_media_id_fkey'), 'mediausage', type_='foreignkey')
    op.create_foreign_key('fk_mediausage_media_id', 'mediausage', 'media', ['media_id'], ['id'], ondelete='CASCADE')
    op.alter_column('unknownfacecluster', 'event_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(op.f('unknownfacecluster_event_id_fkey'), 'unknownfacecluster', type_='foreignkey')
    op.create_foreign_key('fk_unknownfacecluster_event_id', 'unknownfacecluster', 'event', ['event_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_unknownfacecluster_event_id', 'unknownfacecluster', type_='foreignkey')
    op.create_foreign_key(op.f('unknownfacecluster_event_id_fkey'), 'unknownfacecluster', 'event', ['event_id'], ['id'])
    op.alter_column('unknownfacecluster', 'event_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('fk_mediausage_media_id', 'mediausage', type_='foreignkey')
    op.create_foreign_key(op.f('mediausage_media_id_fkey'), 'mediausage', 'media', ['media_id'], ['id'])
    op.create_unique_constraint(op.f('mediausage_media_id_key'), 'mediausage', ['media_id'], postgresql_nulls_not_distinct=False)
    op.drop_constraint('fk_mediaembedding_user_id', 'mediaembedding', type_='foreignkey')
    op.drop_constraint('fk_mediaembedding_media_id', 'mediaembedding', type_='foreignkey')
    op.create_foreign_key(op.f('mediaembedding_user_id_fkey'), 'mediaembedding', 'user', ['user_id'], ['id'])
    op.create_foreign_key(op.f('mediaembedding_media_id_fkey'), 'mediaembedding', 'media', ['media_id'], ['id'])
    op.drop_constraint('fk_facematch_event_id', 'facematch', type_='foreignkey')
    op.drop_constraint('fk_facematch_user_id', 'facematch', type_='foreignkey')
    op.drop_constraint('fk_facematch_media_id', 'facematch', type_='foreignkey')
    op.create_foreign_key(op.f('facematch_matched_user_id_fkey'), 'facematch', 'user', ['matched_user_id'], ['id'])
    op.create_foreign_key(op.f('facematch_media_id_fkey'), 'facematch', 'media', ['media_id'], ['id'])
    op.create_foreign_key(op.f('facematch_event_id_fkey'), 'facematch', 'event', ['event_id'], ['id'])
    op.alter_column('facematch', 'matched_user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_eventparticipant_status'), table_name='eventparticipant')
    op.alter_column('eventparticipant', 'status',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint('fk_event_created_by_id', 'event', type_='foreignkey')
    op.create_foreign_key(op.f('event_created_by_id_fkey'), 'event', 'user', ['created_by_id'], ['id'])
    op.drop_index(op.f('ix_event_name'), table_name='event')
    op.alter_column('event', 'created_by_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('event', 'auto_approve_uploads',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('event', 'allow_contributions',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('event', 'secret',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('event', 'privacy',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
