services:
  facify-db:
    image: ankane/pgvector:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  facify-redis:
    image: redis:7-alpine
    restart: always
    networks:
      - backend

  facify-api:
    build: .
    env_file:
      - .env
    expose:
      - "8000"
    volumes:
      - .:/code
    networks:
      - backend
    depends_on:
      - facify-db
      - facify-redis
    command: bash -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000"

  facify-worker:
    build: .
    env_file:
      - .env
    volumes:
      - .:/code
    networks:
      - backend
    depends_on:
      - facify-db
      - facify-redis
    command: celery -A workers worker --loglevel=info

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    networks:
      - backend

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
